[{"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\login\\index.tsx":"1","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\App.tsx":"2","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\utils\\hook\\hook-utils.tsx":"3","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\index.tsx":"4","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\utils\\hook\\fetch-hook.tsx":"5","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\tools\\index.ts":"6","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\tools\\form-take\\index.ts":"7","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\reportWebVitals.ts":"8","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\utils\\index.tsx":"9","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components\\menu\\index.tsx":"10","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\index-page\\index.tsx":"11","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\Login\\login-form\\index.tsx":"12","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\form\\index.tsx":"13","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\index.tsx":"14","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\register\\index.tsx":"15","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\Register\\index.ts":"16","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\tools\\form-check\\index.ts":"17","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\index.tsx":"18","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\find-password\\index.ts":"19","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\forbidden-pages\\404\\404-page.tsx":"20","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\Next\\index.tsx":"21","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\find-password\\Next\\index.ts":"22"},{"size":3608,"mtime":1613398867363,"results":"23","hashOfConfig":"24"},{"size":1273,"mtime":1613395634649,"results":"25","hashOfConfig":"24"},{"size":104,"mtime":1611192795143,"results":"26","hashOfConfig":"24"},{"size":500,"mtime":1611113959239,"results":"27","hashOfConfig":"24"},{"size":2699,"mtime":1613289558804,"results":"28","hashOfConfig":"24"},{"size":108,"mtime":1613393543994,"results":"29","hashOfConfig":"24"},{"size":509,"mtime":1613381532797,"results":"30","hashOfConfig":"24"},{"size":425,"mtime":1611113959239,"results":"31","hashOfConfig":"24"},{"size":70,"mtime":1611562802912,"results":"32","hashOfConfig":"24"},{"size":2042,"mtime":1613399363422,"results":"33","hashOfConfig":"24"},{"size":3811,"mtime":1613373569181,"results":"34","hashOfConfig":"24"},{"size":1237,"mtime":1613381300283,"results":"35","hashOfConfig":"24"},{"size":6718,"mtime":1613393695270,"results":"36","hashOfConfig":"24"},{"size":264,"mtime":1613395597672,"results":"37","hashOfConfig":"24"},{"size":4467,"mtime":1613398858987,"results":"38","hashOfConfig":"24"},{"size":1513,"mtime":1613399168558,"results":"39","hashOfConfig":"24"},{"size":135,"mtime":1613393793621,"results":"40","hashOfConfig":"24"},{"size":5211,"mtime":1613399141218,"results":"41","hashOfConfig":"24"},{"size":1028,"mtime":1613399174208,"results":"42","hashOfConfig":"24"},{"size":134,"mtime":1611130878838,"results":"43","hashOfConfig":"24"},{"size":4820,"mtime":1613399046293,"results":"44","hashOfConfig":"24"},{"size":1333,"mtime":1613399179346,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"2eokn4",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\login\\index.tsx",["95","96","97"],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\App.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\utils\\hook\\hook-utils.tsx",[],["98","99"],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\index.tsx",[],["100","101"],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\utils\\hook\\fetch-hook.tsx",["102"],"import { useState, useEffect } from 'react';\r\n\r\nenum netResponse {\r\n    fulfilled,\r\n    startFetching,\r\n    inFetching,\r\n    inParsing,\r\n    inErroring,\r\n}\r\n\r\nexport interface basicNetResponse extends Object {\r\n    error?: string | Error | object | any;\r\n    netResponse?: boolean;\r\n    errorMessage: string;\r\n    responseType: string;\r\n    response: string | object | null;\r\n}\r\n\r\n//only for json and string\r\nexport default function useJsonFetch<\r\n    T extends basicNetResponse = basicNetResponse\r\n>(state: T): [T, Function] {\r\n    const [Response, setResponse] = useState<T>({\r\n        ...state,\r\n        netResponse: netResponse.startFetching,\r\n        error: 'nothing good or bad happened',\r\n    });\r\n    return [\r\n        Response,\r\n        async (url: string, request: Request) => {\r\n            try {\r\n                const response = await fetch(url, request);\r\n                setResponse({\r\n                    ...Response,\r\n                    netResponse: netResponse.inFetching,\r\n                });\r\n                const resString = await response.text();\r\n                setResponse({\r\n                    ...Response,\r\n                    netResponse: netResponse.inParsing,\r\n                });\r\n                try {\r\n                    const res = JSON.parse(resString);\r\n                    setResponse({ ...Response, responseType: 'Object', res });\r\n                } catch (e) {\r\n                    setResponse({\r\n                        ...Response,\r\n                        responseType: 'string',\r\n                        resString,\r\n                    });\r\n                }\r\n                setResponse({\r\n                    ...Response,\r\n                    netResponse: netResponse.fulfilled,\r\n                });\r\n            } catch (error) {\r\n                setResponse({\r\n                    ...Response,\r\n                    netResponse: netResponse.inErroring,\r\n                    errorMessage: `error + ${error.toString()}`,\r\n                });\r\n            }\r\n        },\r\n    ];\r\n}\r\n\r\nconst useEveryFetch: () => [\r\n    Response | undefined,\r\n    Error | undefined,\r\n    (url: string, options: RequestInit) => Promise<void>,\r\n    (e: Error) => void\r\n] = () => {\r\n    const [response, setResponse] = useState<Response>();\r\n    const [error, setError] = useState<Error>();\r\n    return [\r\n        response,\r\n        error,\r\n        async (url, options) => {\r\n            try {\r\n                const res = await fetch(url, options);\r\n                setResponse(res);\r\n            } catch (e) {\r\n                setError(e);\r\n            }\r\n        },\r\n        (e: Error) => {\r\n            setError(e);\r\n        },\r\n    ];\r\n};\r\n\r\nexport { useEveryFetch };\r\n","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\tools\\index.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\tools\\form-take\\index.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\reportWebVitals.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\utils\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components\\menu\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\index-page\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\Login\\login-form\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\form\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\register\\index.tsx",["103"],"import React from 'react';\r\nimport { formFc } from '../../form';\r\nimport utils from '../../utils';\r\nimport * as tools from '../../tools';\r\nimport { Box, TextField, Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { registerForm } from '../../components-config/Register';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\n\r\nconst RegisterForm: React.FC<{\r\n    hooks: (e: React.FormEvent<HTMLFormElement>) => void;\r\n    clickState: boolean;\r\n    State: JSX.Element;\r\n}> = ({ hooks, clickState, State }) => {\r\n    const registerFormStyles = registerForm.createInputStyles();\r\n    React.useEffect(() => {\r\n        return () => {};\r\n    }, []);\r\n    return (\r\n        <Box {...registerForm.box}>\r\n            {State}\r\n            <form\r\n                {...registerForm.form}\r\n                onSubmit={hooks}\r\n                className={registerFormStyles.form}>\r\n                {registerForm.inputElements.map(elementComponent => (\r\n                    <Box key={elementComponent.name}>\r\n                        <TextField\r\n                            {...elementComponent}\r\n                            label={elementComponent.name}\r\n                            variant=\"outlined\"\r\n                            className={registerFormStyles.Input}\r\n                        />\r\n                    </Box>\r\n                ))}\r\n                <Box className={registerFormStyles.box}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={clickState}\r\n                        className={registerFormStyles.Submit}\r\n                        startIcon={<ForwardIcon />}>\r\n                        Register\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const Form: formFc<\r\n    {\r\n        hooks: (e: React.FormEvent<HTMLFormElement>) => void;\r\n        clickState: boolean;\r\n        State: JSX.Element;\r\n    },\r\n    {},\r\n    {},\r\n    {},\r\n    {},\r\n    {}\r\n> = ({\r\n    FormElement,\r\n    InitialElement,\r\n    WarningElement,\r\n    WaitingElement,\r\n    ParsingElement,\r\n    ErrorElement,\r\n    FullfilElement,\r\n}) => {\r\n    const [res, err, Fetch, Catch] = utils.useEveryFetch();\r\n    const [Json, setJson] = React.useState<unknown>();\r\n    const [Render, setRender] = React.useState<JSX.Element>(<InitialElement />);\r\n    const [clicked, setClick] = React.useState<boolean>(false);\r\n    async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (!clicked) {\r\n            setClick(true);\r\n            setRender(<WaitingElement />);\r\n            const formData = tools.formTake(e.currentTarget);\r\n            try {\r\n                await Fetch('http://localhost:8000/user/register', {\r\n                    method: 'post',\r\n                    body: JSON.stringify(formData),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                    }),\r\n                });\r\n                setRender(<ParsingElement />);\r\n                setJson(await res?.json());\r\n                setRender(<FullfilElement />);\r\n            } catch (e) {\r\n                Catch(e);\r\n                setClick(true);\r\n            }\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        if (!res) {\r\n            setClick(false);\r\n        }\r\n        return () => {};\r\n    }, [res]);\r\n    React.useEffect(() => {\r\n        if (err) {\r\n            setRender(<ErrorElement />);\r\n        } else if (res?.status === 200) {\r\n            setRender(<FullfilElement />);\r\n        } else if (res?.status === 404) {\r\n            setClick(true);\r\n            setRender(<ErrorElement />);\r\n        }\r\n        return () => {};\r\n    }, [err, res, Json, ErrorElement, FullfilElement]);\r\n    return (\r\n        <FormElement hooks={handleSubmit} State={Render} clickState={clicked} />\r\n    );\r\n};\r\n\r\nconst Register: React.FC<any> = () => (\r\n    <Form\r\n        {...{\r\n            FormElement: RegisterForm,\r\n            InitialElement: () => <></>,\r\n            WarningElement: () => <>{'msg'}</>,\r\n            WaitingElement: () => <code>waiting</code>,\r\n            ParsingElement: () => <code>parsing</code>,\r\n            ErrorElement: () => <code>error</code>,\r\n            FullfilElement: () => <code>fullfil</code>,\r\n        }}\r\n    />\r\n);\r\nexport default Register;\r\n","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\Register\\index.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\tools\\form-check\\index.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\index.tsx",["104"],"import React from 'react';\r\nimport { formFc } from '../../form';\r\nimport utils from '../../utils';\r\nimport * as tools from '../../tools';\r\nimport { Box, TextField, Button } from '@material-ui/core';\r\nimport { BrowserRouter, Link, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { findMyPasswordForm } from '../../components-config/find-password';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport FindMyPasswordNext from './Next';\r\n\r\nconst FindMyPasswordForm: React.FC<{\r\n    hooks: (e: React.FormEvent<HTMLFormElement>) => void;\r\n    clickState: boolean;\r\n    State: JSX.Element;\r\n}> = ({ hooks, clickState, State }) => {\r\n    const FindMyPasswordFormStyles = findMyPasswordForm.createInputStyles();\r\n    React.useEffect(() => {\r\n        return () => {};\r\n    }, []);\r\n    return (\r\n        <Box {...findMyPasswordForm.box}>\r\n            {State}\r\n            <form\r\n                {...findMyPasswordForm.form}\r\n                onSubmit={hooks}\r\n                className={FindMyPasswordFormStyles.form}>\r\n                {findMyPasswordForm.inputElements.map(elementComponent => (\r\n                    <Box key={elementComponent.name}>\r\n                        <TextField\r\n                            {...elementComponent}\r\n                            label={elementComponent.name}\r\n                            variant=\"outlined\"\r\n                            className={FindMyPasswordFormStyles.Input}\r\n                        />\r\n                    </Box>\r\n                ))}\r\n                <Box className={FindMyPasswordFormStyles.box}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={clickState}\r\n                        className={FindMyPasswordFormStyles.Submit}\r\n                        startIcon={<ForwardIcon />}>\r\n                        Next\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const Form: formFc<\r\n    {\r\n        hooks: (e: React.FormEvent<HTMLFormElement>) => void;\r\n        clickState: boolean;\r\n        State: JSX.Element;\r\n    },\r\n    {},\r\n    {},\r\n    {},\r\n    {},\r\n    {}\r\n> = ({\r\n    FormElement,\r\n    InitialElement,\r\n    WarningElement,\r\n    WaitingElement,\r\n    ParsingElement,\r\n    ErrorElement,\r\n    FullfilElement,\r\n}) => {\r\n    const [res, err, Fetch, Catch] = utils.useEveryFetch();\r\n    const [Json, setJson] = React.useState<unknown>();\r\n    const [Render, setRender] = React.useState<JSX.Element>(<InitialElement />);\r\n    const [clicked, setClick] = React.useState<boolean>(false);\r\n    async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (!clicked) {\r\n            setClick(true);\r\n            setRender(<WaitingElement />);\r\n            const formData = tools.formTake(e.currentTarget);\r\n            try {\r\n                await Fetch('http://localhost:8000/user/register', {\r\n                    method: 'post',\r\n                    body: JSON.stringify(formData),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                    }),\r\n                });\r\n                setRender(<ParsingElement />);\r\n                setJson(await res?.json());\r\n                setRender(<FullfilElement />);\r\n            } catch (e) {\r\n                Catch(e);\r\n                setClick(true);\r\n            }\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        if (!res) {\r\n            setClick(false);\r\n        }\r\n        return () => {};\r\n    }, [res]);\r\n    React.useEffect(() => {\r\n        if (err) {\r\n            setRender(<ErrorElement />);\r\n        } else if (res?.status === 200) {\r\n            setRender(<FullfilElement />);\r\n        } else if (res?.status === 404) {\r\n            setClick(true);\r\n            setRender(<ErrorElement />);\r\n        }\r\n        return () => {};\r\n    }, [err, res, Json, ErrorElement, FullfilElement]);\r\n    return (\r\n        <FormElement hooks={handleSubmit} State={Render} clickState={clicked} />\r\n    );\r\n};\r\n\r\nconst FindMyPassword: React.FC<any> = () => (\r\n    <BrowserRouter basename=\"/find-password\">\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Form\r\n                    {...{\r\n                        FormElement: FindMyPasswordForm,\r\n                        InitialElement: () => <></>,\r\n                        WarningElement: () => <>{'msg'}</>,\r\n                        WaitingElement: () => <code>waiting</code>,\r\n                        ParsingElement: () => <code>parsing</code>,\r\n                        ErrorElement: () => <code>error</code>,\r\n                        FullfilElement: () => (\r\n                            <code>\r\n                                fullfil\r\n                                <Redirect to=\"/next\" />\r\n                            </code>\r\n                        ),\r\n                    }}\r\n                />\r\n            </Route>\r\n            <Route exact path=\"/next\">\r\n                <FindMyPasswordNext />\r\n            </Route>\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\nexport default FindMyPassword;\r\n","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\find-password\\index.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\forbidden-pages\\404\\404-page.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\Next\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\find-password\\Next\\index.ts",[],{"ruleId":"105","severity":1,"message":"106","line":1,"column":23,"nodeType":"107","messageId":"108","endLine":1,"endColumn":28},{"ruleId":"105","severity":1,"message":"109","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":13},{"ruleId":"105","severity":1,"message":"110","line":4,"column":13,"nodeType":"107","messageId":"108","endLine":4,"endColumn":18},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"105","severity":1,"message":"117","line":1,"column":20,"nodeType":"107","messageId":"108","endLine":1,"endColumn":29},{"ruleId":"105","severity":1,"message":"118","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":14},{"ruleId":"105","severity":1,"message":"118","line":6,"column":25,"nodeType":"107","messageId":"108","endLine":6,"endColumn":29},"@typescript-eslint/no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'utils' is defined but never used.","'tools' is defined but never used.","no-native-reassign",["119"],"no-negated-in-lhs",["120"],["119"],["120"],"'useEffect' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]