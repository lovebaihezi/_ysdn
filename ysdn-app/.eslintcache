[{"U:\\recover\\ysdn\\ysdn-app\\src\\index.tsx":"1","U:\\recover\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\index.tsx":"2","U:\\recover\\ysdn\\ysdn-app\\src\\pages\\forbidden-pages\\404\\404-page.tsx":"3","U:\\recover\\ysdn\\ysdn-app\\src\\pages\\blog\\upload-article\\index.tsx":"4","U:\\recover\\ysdn\\ysdn-app\\src\\components-config\\Login\\login-form\\index.ts":"5","U:\\recover\\ysdn\\ysdn-app\\src\\pages\\login\\index.tsx":"6","U:\\recover\\ysdn\\ysdn-app\\src\\pages\\register\\index.tsx":"7","U:\\recover\\ysdn\\ysdn-app\\src\\tools\\index.ts":"8"},{"size":500,"mtime":1611113959239,"results":"9","hashOfConfig":"10"},{"size":5517,"mtime":1613978020209,"results":"11","hashOfConfig":"10"},{"size":134,"mtime":1611130878838,"results":"12","hashOfConfig":"10"},{"size":4414,"mtime":1614777307722,"results":"13","hashOfConfig":"10"},{"size":1449,"mtime":1614045952139,"results":"14","hashOfConfig":"10"},{"size":7014,"mtime":1614777334816,"results":"15","hashOfConfig":"10"},{"size":5949,"mtime":1614777342958,"results":"16","hashOfConfig":"10"},{"size":108,"mtime":1613393543994,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1nol10y",{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"U:\\recover\\ysdn\\ysdn-app\\src\\index.tsx",[],["37","38"],"U:\\recover\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\index.tsx",["39","40","41","42","43"],"import React from 'react';\r\nimport utils from '../../utils';\r\nimport * as tools from '../../tools';\r\nimport { Box, TextField, Button } from '@material-ui/core';\r\nimport { BrowserRouter, Link, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { findMyPasswordForm } from '../../components-config/find-password';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport FindMyPasswordNext from './Next';\r\n\r\nconst FindMyPasswordForm: React.FC<{\r\n    hooks: (e: React.FormEvent<HTMLFormElement>) => void;\r\n    clickState: boolean;\r\n    State: JSX.Element;\r\n}> = ({ hooks, clickState, State }) => {\r\n    const FindMyPasswordFormStyles = findMyPasswordForm.createInputStyles();\r\n    React.useEffect(() => {\r\n        return () => {};\r\n    }, []);\r\n    return (\r\n        <Box {...findMyPasswordForm.box}>\r\n            {State}\r\n            <form\r\n                {...findMyPasswordForm.form}\r\n                onSubmit={hooks}\r\n                className={FindMyPasswordFormStyles.form}>\r\n                {findMyPasswordForm.inputElements.map(elementComponent => (\r\n                    <Box\r\n                        key={elementComponent.name}\r\n                        className={FindMyPasswordFormStyles.box}>\r\n                        <TextField\r\n                            {...elementComponent}\r\n                            label={elementComponent.name}\r\n                            variant=\"filled\"\r\n                            className={FindMyPasswordFormStyles.Input}\r\n                        />\r\n                    </Box>\r\n                ))}\r\n                <Box className={FindMyPasswordFormStyles.box}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={clickState}\r\n                        className={FindMyPasswordFormStyles.Submit}\r\n                        startIcon={<ForwardIcon />}>\r\n                        Next\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\n// export const Form: formFc<\r\n//     {\r\n//         hooks: (e: React.FormEvent<HTMLFormElement>) => void;\r\n//         clickState: boolean;\r\n//         State: JSX.Element;\r\n//     },\r\n//     {},\r\n//     {},\r\n//     {},\r\n//     {},\r\n//     {}\r\n// > = ({\r\n//     FormElement,\r\n//     InitialElement,\r\n//     WarningElement,\r\n//     WaitingElement,\r\n//     ParsingElement,\r\n//     ErrorElement,\r\n//     FullfilElement,\r\n// }) => {\r\n//     const [res, err, Fetch, Catch] = utils.useEveryFetch();\r\n//     const [Json, setJson] = React.useState<unknown>();\r\n//     const [Render, setRender] = React.useState<JSX.Element>(<InitialElement />);\r\n//     const [clicked, setClick] = React.useState<boolean>(false);\r\n//     async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n//         e.preventDefault();\r\n//         if (!clicked) {\r\n//             setClick(true);\r\n//             setRender(<WaitingElement />);\r\n//             const formData = tools.formTake(e.currentTarget);\r\n//             try {\r\n//                 await Fetch('http://localhost:8000/user/register', {\r\n//                     method: 'post',\r\n//                     body: JSON.stringify(formData),\r\n//                     headers: new Headers({\r\n//                         'Content-Type': 'application/json',\r\n//                     }),\r\n//                 });\r\n//                 setRender(<ParsingElement />);\r\n//                 setJson(await res?.json());\r\n//                 setRender(<FullfilElement />);\r\n//             } catch (e) {\r\n//                 Catch(e);\r\n//                 setClick(true);\r\n//             }\r\n//         }\r\n//     }\r\n//     React.useEffect(() => {\r\n//         if (!res) {\r\n//             setClick(false);\r\n//         }\r\n//         return () => {};\r\n//     }, [res]);\r\n//     React.useEffect(() => {\r\n//         if (err) {\r\n//             setRender(<ErrorElement />);\r\n//         } else if (res?.status === 200) {\r\n//             setRender(<FullfilElement />);\r\n//         } else if (res?.status === 404) {\r\n//             setClick(true);\r\n//             setRender(<ErrorElement />);\r\n//         }\r\n//         return () => {};\r\n//     }, [err, res, Json, ErrorElement, FullfilElement]);\r\n//     return (\r\n//         <FormElement hooks={handleSubmit} State={Render} clickState={clicked} />\r\n//     );\r\n// };\r\n\r\nconst FindMyPassword: React.FC<any> = () => (\r\n    <BrowserRouter basename=\"/find-password\">\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                {/* <Form\r\n                    {...{\r\n                        FormElement: FindMyPasswordForm,\r\n                        InitialElement: () => <></>,\r\n                        WarningElement: () => <>{'msg'}</>,\r\n                        WaitingElement: () => <code>waiting</code>,\r\n                        ParsingElement: () => <code>parsing</code>,\r\n                        ErrorElement: () => <code>error</code>,\r\n                        FullfilElement: () => (\r\n                            <code>\r\n                                fullfil\r\n                                <Redirect to=\"/next\" />\r\n                            </code>\r\n                        ),\r\n                    }}\r\n                    setSuccess={() => {}}\r\n                /> */}\r\n            </Route>\r\n            <Route exact path=\"/next\">\r\n                <FindMyPasswordNext />\r\n            </Route>\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\nexport default FindMyPassword;\r\n","U:\\recover\\ysdn\\ysdn-app\\src\\pages\\forbidden-pages\\404\\404-page.tsx",[],"U:\\recover\\ysdn\\ysdn-app\\src\\pages\\blog\\upload-article\\index.tsx",["44","45","46","47","48","49"],"import {\r\n    Box,\r\n    Button,\r\n    createStyles,\r\n    fade,\r\n    IconButton,\r\n    makeStyles,\r\n    Snackbar,\r\n    TextField,\r\n    Theme,\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\nimport MDEditor from '@uiw/react-md-editor';\r\nimport { useLoginState } from '../../../auth';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Schema } from 'mongoose';\r\nimport { user } from '../../../interface';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst MsgElement: React.FC<{ msg: string }> = ({ msg }) => {\r\n    const [Open, setOpen] = React.useState<boolean>(true);\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n    return msg ? (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n            }}\r\n            open={Open}\r\n            autoHideDuration={2000}\r\n            onClose={handleClose}\r\n            message={msg}\r\n            action={\r\n                <>\r\n                    <Button color=\"primary\" size=\"small\" onClick={handleClose}>\r\n                        OK\r\n                    </Button>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        onClick={handleClose}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </>\r\n            }\r\n        />\r\n    ) : (\r\n        <></>\r\n    );\r\n};\r\n\r\n// TODO : rebuild it !!!\r\n// TODO : before rebuild ,please think about process of article editing\r\n\r\nconst MD = () => {\r\n    const userInformation = useLoginState();\r\n    const [value, setValue] = React.useState<string>('hello world');\r\n    const [error, setError] = React.useState<Error>();\r\n    const [Render, setRender] = React.useState<JSX.Element>(<></>);\r\n    const [click, setDisable] = React.useState<boolean>(false);\r\n    const [res, setRes] = React.useState<\r\n        user & { _id: Schema.Types.ObjectId }\r\n    >();\r\n    async function uploadArticle() {\r\n        if (userInformation) {\r\n            setDisable(true);\r\n            const { _id } = userInformation;\r\n            try {\r\n                setRes(\r\n                    await (\r\n                        await fetch(\r\n                            'http://localhost:12345/blog/uploadArticle',\r\n                            {\r\n                                method: 'post',\r\n                                body: JSON.stringify({\r\n                                    userID: _id,\r\n                                    article: {\r\n                                        title:\r\n                                            value.split(' ')[0] || 'no title',\r\n                                        content: value,\r\n                                    },\r\n                                }),\r\n                                headers: new Headers({\r\n                                    'Content-Type': 'application/json',\r\n                                }),\r\n                            }\r\n                        )\r\n                    ).json()\r\n                );\r\n            } catch (e) {\r\n                setError(new Error(e));\r\n            }\r\n        } else {\r\n            setDisable(false);\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        if (error) {\r\n            setDisable(false);\r\n            setRender(<MsgElement msg={error.toString()} />);\r\n        } else if (res && res._id) {\r\n            setRender(<MsgElement msg={'upload success'} />);\r\n        } else {\r\n            setDisable(false);\r\n            setRender(<MsgElement msg={'excepted error'} />);\r\n        }\r\n    }, [error, res]);\r\n    if (userInformation) {\r\n        return (\r\n            <>\r\n                {Render}\r\n                <MDEditor height=\"640\" onChange={v => v && setValue(v)} />\r\n                <Box>\r\n                    <Button\r\n                        disabled={click}\r\n                        onClick={() => {\r\n                            uploadArticle();\r\n                        }}>\r\n                        upload\r\n                    </Button>\r\n                </Box>\r\n            </>\r\n        );\r\n    } else {\r\n        return <Redirect to=\"../login\" />;\r\n    }\r\n};\r\n\r\nexport const Uploader: React.FC<any> = () => {\r\n    return <MD />;\r\n};\r\n","U:\\recover\\ysdn\\ysdn-app\\src\\components-config\\Login\\login-form\\index.ts",[],"U:\\recover\\ysdn\\ysdn-app\\src\\pages\\login\\index.tsx",["50","51","52","53","54"],"U:\\recover\\ysdn\\ysdn-app\\src\\pages\\register\\index.tsx",["55","56","57","58","59","60"],"U:\\recover\\ysdn\\ysdn-app\\src\\tools\\index.ts",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":13},{"ruleId":"65","severity":1,"message":"69","line":3,"column":13,"nodeType":"67","messageId":"68","endLine":3,"endColumn":18},{"ruleId":"65","severity":1,"message":"70","line":5,"column":25,"nodeType":"67","messageId":"68","endLine":5,"endColumn":29},{"ruleId":"65","severity":1,"message":"71","line":5,"column":31,"nodeType":"67","messageId":"68","endLine":5,"endColumn":39},{"ruleId":"65","severity":1,"message":"72","line":10,"column":7,"nodeType":"67","messageId":"68","endLine":14,"endColumn":3},{"ruleId":"65","severity":1,"message":"73","line":4,"column":5,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"65","severity":1,"message":"74","line":5,"column":5,"nodeType":"67","messageId":"68","endLine":5,"endColumn":9},{"ruleId":"65","severity":1,"message":"75","line":7,"column":5,"nodeType":"67","messageId":"68","endLine":7,"endColumn":15},{"ruleId":"65","severity":1,"message":"76","line":9,"column":5,"nodeType":"67","messageId":"68","endLine":9,"endColumn":14},{"ruleId":"65","severity":1,"message":"77","line":10,"column":5,"nodeType":"67","messageId":"68","endLine":10,"endColumn":10},{"ruleId":"65","severity":1,"message":"78","line":12,"column":17,"nodeType":"67","messageId":"68","endLine":12,"endColumn":25},{"ruleId":"65","severity":1,"message":"79","line":17,"column":10,"nodeType":"67","messageId":"68","endLine":17,"endColumn":14},{"ruleId":"65","severity":1,"message":"80","line":136,"column":7,"nodeType":"67","messageId":"68","endLine":136,"endColumn":18},{"ruleId":"65","severity":1,"message":"81","line":137,"column":19,"nodeType":"67","messageId":"68","endLine":137,"endColumn":27},{"ruleId":"65","severity":1,"message":"82","line":152,"column":14,"nodeType":"67","messageId":"68","endLine":152,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":193,"column":8,"nodeType":"85","endLine":193,"endColumn":24,"suggestions":"86"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":13},{"ruleId":"65","severity":1,"message":"70","line":11,"column":10,"nodeType":"67","messageId":"68","endLine":11,"endColumn":14},{"ruleId":"65","severity":1,"message":"80","line":110,"column":7,"nodeType":"67","messageId":"68","endLine":110,"endColumn":18},{"ruleId":"65","severity":1,"message":"81","line":111,"column":19,"nodeType":"67","messageId":"68","endLine":111,"endColumn":27},{"ruleId":"65","severity":1,"message":"87","line":120,"column":11,"nodeType":"67","messageId":"68","endLine":120,"endColumn":16},{"ruleId":"65","severity":1,"message":"82","line":126,"column":14,"nodeType":"67","messageId":"68","endLine":126,"endColumn":20},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'utils' is defined but never used.","Identifier","unusedVar","'tools' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'FindMyPasswordForm' is assigned a value but never used.","'createStyles' is defined but never used.","'fade' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'Theme' is defined but never used.","'useState' is defined but never used.","'auth' is defined but never used.","'useHelpText' is assigned a value but never used.","'setState' is assigned a value but never used.","'SetRes' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'msg'. Either include it or remove the dependency array. You can also do a functional update 'setMessage(m => ...)' if you only need 'msg' in the 'setMessage' call.","ArrayExpression",["90"],"'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [msg, res, setState]",{"range":"93","text":"94"},[6732,6748],"[msg, res, setState]"]