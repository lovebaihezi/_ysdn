[{"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\form\\index.tsx":"1","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\login\\index.tsx":"2","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\App.tsx":"3","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\forbidden-pages\\404\\404-page.tsx":"4","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components\\menu\\index.tsx":"5","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\index.tsx":"6","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\Register\\index.ts":"7","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\find-password\\Next\\index.ts":"8","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\auth\\index.ts":"9","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\utils\\hook\\fetch-hook.tsx":"10","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\index.tsx":"11","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\forbidden-pages\\forbidden.tsx":"12","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\tools\\index.ts":"13","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\utils\\index.tsx":"14","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\Next\\index.tsx":"15","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\index-page\\index.tsx":"16","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\find-password\\index.ts":"17","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\register\\index.tsx":"18","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\Login\\login-form\\index.ts":"19","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\Login\\index.ts":"20","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\blog\\index.tsx":"21","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\blog\\upload-article\\index.tsx":"22","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\index.tsx":"23","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\tools\\form-take\\index.ts":"24","U:\\recover\\workspace\\ysdn\\ysdn-app\\src\\index.tsx":"25","U:\\recover\\workspace\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\index.tsx":"26","U:\\recover\\workspace\\ysdn\\ysdn-app\\src\\components-config\\Login\\login-form\\index.ts":"27","U:\\recover\\workspace\\ysdn\\ysdn-app\\src\\pages\\login\\index.tsx":"28"},{"size":8091,"mtime":1613806189173,"results":"29","hashOfConfig":"30"},{"size":7017,"mtime":1614082225296,"results":"31","hashOfConfig":"32"},{"size":3188,"mtime":1614082043328,"results":"33","hashOfConfig":"32"},{"size":134,"mtime":1611130878838,"results":"34","hashOfConfig":"32"},{"size":1813,"mtime":1613564532823,"results":"35","hashOfConfig":"30"},{"size":5517,"mtime":1613978020209,"results":"36","hashOfConfig":"32"},{"size":2159,"mtime":1614049758355,"results":"37","hashOfConfig":"30"},{"size":1460,"mtime":1613617405564,"results":"38","hashOfConfig":"30"},{"size":680,"mtime":1614082007571,"results":"39","hashOfConfig":"32"},{"size":3136,"mtime":1613547385581,"results":"40","hashOfConfig":"30"},{"size":500,"mtime":1611113959239,"results":"41","hashOfConfig":"32"},{"size":66,"mtime":1611130895088,"results":"42","hashOfConfig":"30"},{"size":108,"mtime":1613393543994,"results":"43","hashOfConfig":"30"},{"size":70,"mtime":1611562802912,"results":"44","hashOfConfig":"30"},{"size":5177,"mtime":1613978046140,"results":"45","hashOfConfig":"30"},{"size":3811,"mtime":1613373569181,"results":"46","hashOfConfig":"30"},{"size":1155,"mtime":1613617395080,"results":"47","hashOfConfig":"30"},{"size":5948,"mtime":1614082176454,"results":"48","hashOfConfig":"32"},{"size":1449,"mtime":1614045952139,"results":"49","hashOfConfig":"32"},{"size":87,"mtime":1613616986111,"results":"50","hashOfConfig":"30"},{"size":577,"mtime":1613810038118,"results":"51","hashOfConfig":"30"},{"size":3939,"mtime":1614084236225,"results":"52","hashOfConfig":"32"},{"size":264,"mtime":1613395597672,"results":"53","hashOfConfig":"30"},{"size":509,"mtime":1613381532797,"results":"54","hashOfConfig":"30"},{"size":500,"mtime":1611113959239,"results":"55","hashOfConfig":"56"},{"size":5517,"mtime":1613978020209,"results":"57","hashOfConfig":"56"},{"size":1449,"mtime":1614045952139,"results":"58","hashOfConfig":"56"},{"size":7013,"mtime":1614600851012,"results":"59","hashOfConfig":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"2eokn4",{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"3gbckm",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c78zon",{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\form\\index.tsx",["122","123","124","125","126","127","128","129"],"import React from 'react';\r\nimport utils from '../utils';\r\nimport * as tools from '../tools';\r\nimport { user } from '../interface';\r\nimport {\r\n    Box,\r\n    BoxProps,\r\n    TextFieldProps,\r\n    TextField,\r\n    Tooltip,\r\n    TooltipProps,\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nexport interface formFc<\r\n    formArgument = {},\r\n    initialArgument = {},\r\n    WarningArgument = {},\r\n    waitingArgument = {},\r\n    parsingArgument = {},\r\n    errorArgument = {},\r\n    fullfilArgument = {}\r\n> extends React.FC<{\r\n        FormElement: React.FC<formArgument>;\r\n        InitialElement: React.FC<initialArgument>;\r\n        WarningElement: React.FC<WarningArgument>;\r\n        WaitingElement: React.FC<waitingArgument>;\r\n        ParsingElement: React.FC<parsingArgument>;\r\n        ErrorElement: React.FC<errorArgument>;\r\n        FullfilElement: React.FC<fullfilArgument>;\r\n        setSuccess: (P: user) => void;\r\n    }> {}\r\n\r\n//* : first step : status render in form,  *complete! ✔\r\n//* : Next step : status render should be the argument(, and logic should also be an argument ?,but i guess this would cause leak of perform ) ✔\r\n//TODO : * Next step : let form become useForm ,consider useForm\r\n\r\n// function useForm<\r\n//     formArgument extends {} = {},\r\n//     initialArgument extends {} = {},\r\n//     waitingArgument extends {} = {},\r\n//     parsingArgument extends {} = {},\r\n//     errorArgument extends {} = {},\r\n//     fullfilArgument extends {} = {}\r\n// >({\r\n//     FormElement,\r\n//     InitialElement,\r\n//     WaitingElement,\r\n//     ParsingElement,\r\n//     ErrorElement,\r\n//     FullfilElement,\r\n// }: {\r\n//     FormElement: React.FC<formArgument>;\r\n//     InitialElement: React.FC<initialArgument>;\r\n//     WaitingElement: React.FC<waitingArgument>;\r\n//     ParsingElement: React.FC<parsingArgument>;\r\n//     ErrorElement: React.FC<errorArgument>;\r\n//     FullfilElement: React.FC<fullfilArgument>;\r\n// }) {\r\n//     const Form: formFc<\r\n//         formArgument,\r\n//         initialArgument,\r\n//         waitingArgument,\r\n//         parsingArgument,\r\n//         errorArgument,\r\n//         fullfilArgument\r\n//     > = () => {\r\n//         const [res, err, Fetch, Catch] = utils.useEveryFetch();\r\n//         const [Json, setJson] = React.useState<unknown>();\r\n//         const [Render, setRender] = React.useState<JSX.Element>(\r\n//             <InitialElement />\r\n//         );\r\n//         const [clicked, setClick] = React.useState<boolean>(false);\r\n//         async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n//             e.preventDefault();\r\n//             if (!clicked) {\r\n//                 setClick(true);\r\n//                 setRender(<WaitingElement />);\r\n//                 const formData = tools.formTake(e.currentTarget);\r\n//                 try {\r\n//                     await Fetch('http://localhost:8000/user/login', {\r\n//                         method: 'post',\r\n//                         body: JSON.stringify(formData),\r\n//                         headers: new Headers({\r\n//                             'Content-Type': 'application/json',\r\n//                         }),\r\n//                     });\r\n//                     setRender(<ParsingElement />);\r\n//                     setJson(await res?.json());\r\n//                     setRender(<FullfilElement />);\r\n//                 } catch (e) {\r\n//                     Catch(e);\r\n//                     setClick(true);\r\n//                 }\r\n//             }\r\n//         }\r\n//         React.useEffect(() => {\r\n//             if (!res) {\r\n//                 setClick(false);\r\n//             }\r\n//             return () => {};\r\n//         }, [res]);\r\n//         React.useEffect(() => {\r\n//             if (err) {\r\n//                 setRender(<ErrorElement error={err} />);\r\n//             } else if (res?.status === 200) {\r\n//                 setRender(<FullfilElement />);\r\n//             } else if (res?.status === 404) {\r\n//                 setClick(true);\r\n//                 setRender(<ErrorElement error={new Error('404 Not Found!')} />);\r\n//             }\r\n//             return () => {};\r\n//         }, [err, res, Json, ErrorElement, FullfilElement]);\r\n//         return (\r\n//             <FormElement\r\n//                 hooks={handleSubmit}\r\n//                 State={Render}\r\n//                 clickState={clicked}\r\n//             />\r\n//         );\r\n//     };\r\n//     return Form;\r\n// }\r\n/*\r\n  TODO : 1. 加入状态传递\r\n  TODO : 2. url以及form提交函数抽离,\r\n  TODO : 3. 做成useForm函数,泛型多参... // 或者是form容器,将逻辑拆离开???待思考,先简单完成\r\n*/\r\nexport const Form: formFc<\r\n    {\r\n        hooks: (e: React.FormEvent<HTMLFormElement>) => void;\r\n        clickState: boolean;\r\n        State: JSX.Element;\r\n    },\r\n    {},\r\n    { msg: { msg: string } },\r\n    {},\r\n    {},\r\n    { error: Error },\r\n    { res: user }\r\n> = ({\r\n    FormElement,\r\n    InitialElement,\r\n    WarningElement,\r\n    WaitingElement,\r\n    // ParsingElement,\r\n    ErrorElement,\r\n    FullfilElement,\r\n    setSuccess,\r\n}) => {\r\n    const [err, setError] = React.useState<Error>();\r\n    const [Json, setJson] = React.useState<unknown>();\r\n    const [Render, setRender] = React.useState<JSX.Element>(<InitialElement />);\r\n    const [clicked, setClick] = React.useState<boolean>(false);\r\n    async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        // if (!clicked) {\r\n        // setClick(true);\r\n        setRender(<WaitingElement />);\r\n        const rules = {};\r\n        setRender(\r\n            <WarningElement msg={tools.formCheck(e.currentTarget, rules)} />\r\n        );\r\n        const formData: string = JSON.stringify(\r\n            tools.formTake(e.currentTarget)\r\n        );\r\n        try {\r\n            setJson(\r\n                // (\r\n                //     await axios({\r\n                //         url: 'http://localhost:8000/user/login',\r\n                //         method: 'post',\r\n                //         data: JSON.parse(formData),\r\n                //         headers: new Headers({\r\n                //             'Content-Type': 'application/json',\r\n                //         }),\r\n                //     })\r\n                // )?.data\r\n                await (\r\n                    await fetch('http://localhost:8000/user/login', {\r\n                        body: formData,\r\n                        method: 'post',\r\n                        headers: new Headers({\r\n                            'Content-Type': 'application/json',\r\n                        }),\r\n                    })\r\n                )?.json()\r\n            );\r\n        } catch (e) {\r\n            setError(e);\r\n            setClick(false);\r\n        }\r\n        // }\r\n    }\r\n    React.useEffect(() => {\r\n        if (err) {\r\n            setRender(<ErrorElement error={err} />);\r\n        } else if (!Json) {\r\n            setClick(false);\r\n        } else {\r\n            if ((Json as user)?.Account) {\r\n                setRender(<FullfilElement res={Json as user} />);\r\n                setSuccess(Json as user);\r\n            } else if ((Json as { msg: string })?.msg) {\r\n                setRender(\r\n                    <ErrorElement\r\n                        error={new Error((Json as { msg: string })?.msg)}\r\n                    />\r\n                );\r\n            } else {\r\n                setRender(\r\n                    <ErrorElement\r\n                        error={new Error('server error,please try again')}\r\n                    />\r\n                );\r\n                setClick(false);\r\n            }\r\n        }\r\n    }, [Json, err, FullfilElement, ErrorElement, setSuccess]);\r\n    return (\r\n        <FormElement hooks={handleSubmit} State={Render} clickState={clicked} />\r\n    );\r\n};\r\n\r\ntype formProps = React.DetailedHTMLProps<\r\n    React.FormHTMLAttributes<HTMLFormElement>,\r\n    HTMLFormElement\r\n> & {};\r\n\r\nconst setForm: React.FC<{\r\n    Render: JSX.Element;\r\n    formProp: formProps;\r\n}> = ({ Render, formProp, children }) => (\r\n    <form {...formProp}>\r\n        {Render}\r\n        {children}\r\n    </form>\r\n);\r\n\r\nexport default setForm;\r\n","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\login\\index.tsx",["130","131","132","133"],"import {\r\n    Box,\r\n    Button,\r\n    IconButton,\r\n    Snackbar,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport * as React from 'react';\r\n// import utils from '../../utils';\r\n// import * as tools from '../../tools';\r\nimport { loginFormComponent } from '../../components-config/Login';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { auth, user } from '../../interface';\r\nimport { useLoginState } from '../../auth';\r\nimport formTake from '../../tools/form-take';\r\nimport { Schema } from 'mongoose';\r\n\r\nconst LoginForm: React.FC<{\r\n    hooks: (e: React.FormEvent<HTMLFormElement>) => void;\r\n    clickState: boolean;\r\n}> = props => {\r\n    const loginFormStyles = loginFormComponent.loginForm.createInputStyles();\r\n    return (\r\n        <Box {...loginFormComponent.box}>\r\n            {props.children}\r\n            <Box\r\n                style={{\r\n                    width: 320,\r\n                    margin: '0 auto',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <FingerprintIcon\r\n                    style={{ fontSize: 100, margin: '0 auto' }}\r\n                    color=\"primary\"\r\n                />\r\n            </Box>\r\n            <form\r\n                {...loginFormComponent.form}\r\n                onSubmit={props.hooks}\r\n                autoComplete=\"off\"\r\n                className={loginFormStyles.form}>\r\n                {loginFormComponent.loginForm.inputElements.map(\r\n                    elementComponent => (\r\n                        <Box\r\n                            key={elementComponent.name}\r\n                            className={loginFormStyles.box}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                {...elementComponent}\r\n                                className={loginFormStyles.Input}\r\n                                label={elementComponent.name}\r\n                                helperText={''}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                )}\r\n\r\n                <Box className={loginFormStyles.box}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        id=\"login-button-test\"\r\n                        disabled={props.clickState}\r\n                        className={loginFormStyles.Submit}\r\n                        startIcon={<FingerprintIcon />}>\r\n                        login\r\n                    </Button>\r\n                </Box>\r\n                <Box className={loginFormStyles.box}>\r\n                    <Button\r\n                        component={Link}\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        to=\"/register\"\r\n                        className={loginFormStyles.Submit}\r\n                        startIcon={<AddIcon />}>\r\n                        Register\r\n                    </Button>\r\n                </Box>\r\n                <Box className={loginFormStyles.box}>\r\n                    <Button\r\n                        component={Link}\r\n                        color=\"secondary\"\r\n                        to=\"/find-password\"\r\n                        className={loginFormStyles.Submit}\r\n                        startIcon={<VpnKeyIcon />}>\r\n                        forget your password?\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst MsgElement: React.FC<{ msg: string }> = ({ msg }) => {\r\n    const [Open, setOpen] = React.useState<boolean>(true);\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n    return msg ? (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n            }}\r\n            open={Open}\r\n            autoHideDuration={2000}\r\n            onClose={handleClose}\r\n            message={msg}\r\n            action={\r\n                <>\r\n                    <Button color=\"primary\" size=\"small\" onClick={handleClose}>\r\n                        OK\r\n                    </Button>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        onClick={handleClose}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </>\r\n            }\r\n        />\r\n    ) : (\r\n        <></>\r\n    );\r\n};\r\n\r\nconst useHelpText = (helperText: Array<[string, string]>) => {\r\n    const [state, setState] = React.useState<Array<string>>(\r\n        helperText.map(X => X[0])\r\n    );\r\n    return [state, () => {}];\r\n};\r\n\r\nexport const Login: React.FC<{\r\n    setState: (x: user & { _id: Schema.Types.ObjectId }) => void;\r\n}> = ({ setState }) => {\r\n    const state = useLoginState();\r\n    const [res, setRes] = React.useState<\r\n        user & { msg?: string } & { _id: Schema.Types.ObjectId }\r\n    >();\r\n    const [msg, setMessage] = React.useState<string>('');\r\n    const [clicked, setDisabled] = React.useState<boolean>(true);\r\n    function SetRes(\r\n        res: user & { msg?: string } & { _id: Schema.Types.ObjectId }\r\n    ) {\r\n        setRes(res);\r\n    }\r\n    async function X(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (!clicked) {\r\n            setDisabled(true);\r\n            try {\r\n                setRes(\r\n                    await (\r\n                        await fetch('http://localhost:8000/user/login', {\r\n                            method: 'post',\r\n                            body: JSON.stringify(formTake(e.currentTarget)),\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            },\r\n                        })\r\n                    ).json()\r\n                );\r\n            } catch (e) {\r\n                setMessage((e as Error)?.message.toString() ?? e.toString());\r\n            }\r\n        } else {\r\n            setDisabled(false);\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        if (!res || res?.msg || msg) {\r\n            setDisabled(false);\r\n            if (msg || res?.msg) {\r\n                setMessage(res?.msg ?? msg);\r\n            }\r\n        } else {\r\n            setDisabled(true);\r\n            if (res?.Account) {\r\n                setState(res);\r\n            }\r\n        }\r\n        return () => {};\r\n    }, [msg, res, setState]);\r\n    if ((res && res?.Account) || state) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n        <>\r\n            <LoginForm hooks={X} clickState={clicked}>\r\n                <MsgElement msg={msg} />\r\n            </LoginForm>\r\n        </>\r\n    );\r\n};\r\n","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\App.tsx",["134"],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\forbidden-pages\\404\\404-page.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components\\menu\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\index.tsx",["135","136","137","138","139"],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\Register\\index.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\find-password\\Next\\index.ts",[],["140","141"],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\auth\\index.ts",["142"],"import { Mongoose, Schema } from 'mongoose';\r\nimport * as React from 'react';\r\nimport { user } from '../interface';\r\nexport const LoginState = React.createContext<\r\n    false | (user & { _id: Schema.Types.ObjectId })\r\n>(\r\n    ((\r\n        P: user & { _id: Schema.Types.ObjectId }\r\n    ): false | (user & { _id: Schema.Types.ObjectId }) => (P ? P : false))(\r\n        JSON.parse(\r\n            ((P: string) => (P && P !== 'undefined' ? P : '{}'))(\r\n                sessionStorage.getItem('user') ?? ''\r\n            ) ?? '{}'\r\n        )\r\n    )\r\n);\r\nexport const useLoginState = () =>\r\n    React.useContext<false | (user & { _id: Schema.Types.ObjectId })>(\r\n        LoginState\r\n    );\r\n","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\utils\\hook\\fetch-hook.tsx",["143"],"import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nenum netResponse {\r\n    fulfilled,\r\n    startFetching,\r\n    inFetching,\r\n    inParsing,\r\n    inErroring,\r\n}\r\n\r\nexport interface basicNetResponse extends Object {\r\n    error?: string | Error | object | any;\r\n    netResponse?: boolean;\r\n    errorMessage: string;\r\n    responseType: string;\r\n    response: string | object | null;\r\n}\r\n\r\n//only for json and string\r\nexport default function useJsonFetch<\r\n    T extends basicNetResponse = basicNetResponse\r\n>(state: T): [T, Function] {\r\n    const [Response, setResponse] = useState<T>({\r\n        ...state,\r\n        netResponse: netResponse.startFetching,\r\n        error: 'nothing good or bad happened',\r\n    });\r\n    return [\r\n        Response,\r\n        async (url: string, request: Request) => {\r\n            try {\r\n                const response = await fetch(url, request);\r\n                setResponse({\r\n                    ...Response,\r\n                    netResponse: netResponse.inFetching,\r\n                });\r\n                const resString = await response.text();\r\n                setResponse({\r\n                    ...Response,\r\n                    netResponse: netResponse.inParsing,\r\n                });\r\n                try {\r\n                    const res = JSON.parse(resString);\r\n                    setResponse({ ...Response, responseType: 'Object', res });\r\n                } catch (e) {\r\n                    setResponse({\r\n                        ...Response,\r\n                        responseType: 'string',\r\n                        resString,\r\n                    });\r\n                }\r\n                setResponse({\r\n                    ...Response,\r\n                    netResponse: netResponse.fulfilled,\r\n                });\r\n            } catch (error) {\r\n                setResponse({\r\n                    ...Response,\r\n                    netResponse: netResponse.inErroring,\r\n                    errorMessage: `error + ${error.toString()}`,\r\n                });\r\n            }\r\n        },\r\n    ];\r\n}\r\n\r\nconst useEveryFetch: () => [\r\n    Response | undefined,\r\n    Error | undefined,\r\n    (url: string, options: RequestInit) => Promise<void>,\r\n    (e: Error) => void\r\n] = () => {\r\n    const [response, setResponse] = useState<Response>();\r\n    const [error, setError] = useState<Error>();\r\n    return [\r\n        response,\r\n        error,\r\n        async (url, options) => {\r\n            try {\r\n                const res = await fetch(url, options);\r\n                setResponse(res);\r\n            } catch (e) {\r\n                setError(e);\r\n            }\r\n        },\r\n        (e: Error) => {\r\n            setError(e);\r\n        },\r\n    ];\r\n};\r\n\r\nconst useJSONFetch = () => {\r\n    const [res, setRes] = useState<AxiosResponse>();\r\n    const [err, setError] = useState<Error>();\r\n    return [\r\n        res,\r\n        err,\r\n        async (options: AxiosRequestConfig) => {\r\n            setRes(await axios(options));\r\n        },\r\n        (e: Error) => {\r\n            setError(e);\r\n        },\r\n    ];\r\n};\r\n\r\nexport { useEveryFetch, useJSONFetch };\r\n","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\forbidden-pages\\forbidden.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\tools\\index.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\utils\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\Next\\index.tsx",["144","145","146","147"],"import React from 'react';\r\nimport utils from '../../../utils';\r\nimport * as tools from '../../../tools';\r\nimport { Box, TextField, Button } from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { findMyPasswordNextComponent } from '../../../components-config/find-password/Next';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\n\r\nconst NextForm: React.FC<{\r\n    hooks: (e: React.FormEvent<HTMLFormElement>) => void;\r\n    clickState: boolean;\r\n    State: JSX.Element;\r\n}> = ({ hooks, clickState, State }) => {\r\n    const FindMyPasswordNextFormStyles = findMyPasswordNextComponent.createInputStyles();\r\n    React.useEffect(() => {\r\n        return () => {};\r\n    }, []);\r\n    return (\r\n        <Box {...findMyPasswordNextComponent.box}>\r\n            {State}\r\n            <form\r\n                {...findMyPasswordNextComponent.form}\r\n                onSubmit={hooks}\r\n                className={FindMyPasswordNextFormStyles.form}>\r\n                {findMyPasswordNextComponent.inputElements.map(\r\n                    elementComponent => (\r\n                        <Box\r\n                            key={elementComponent.name}\r\n                            className={FindMyPasswordNextFormStyles.box}>\r\n                            <TextField\r\n                                {...elementComponent}\r\n                                label={elementComponent.name}\r\n                                variant=\"filled\"\r\n                                className={FindMyPasswordNextFormStyles.Input}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                )}\r\n                <Box className={FindMyPasswordNextFormStyles.box}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={clickState}\r\n                        className={FindMyPasswordNextFormStyles.Submit}\r\n                        startIcon={<ForwardIcon />}>\r\n                        Confirm\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\n// export const Form: formFc<\r\n//     {\r\n//         hooks: (e: React.FormEvent<HTMLFormElement>) => void;\r\n//         clickState: boolean;\r\n//         State: JSX.Element;\r\n//     },\r\n//     {},\r\n//     {},\r\n//     {},\r\n//     {},\r\n//     {}\r\n// > = ({\r\n//     FormElement,\r\n//     InitialElement,\r\n//     WarningElement,\r\n//     WaitingElement,\r\n//     ParsingElement,\r\n//     ErrorElement,\r\n//     FullfilElement,\r\n// }) => {\r\n//     const [res, err, Fetch, Catch] = utils.useEveryFetch();\r\n//     const [Json, setJson] = React.useState<unknown>();\r\n//     const [Render, setRender] = React.useState<JSX.Element>(<InitialElement />);\r\n//     const [clicked, setClick] = React.useState<boolean>(false);\r\n//     async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n//         e.preventDefault();\r\n//         if (!clicked) {\r\n//             setClick(true);\r\n//             setRender(<WaitingElement />);\r\n//             const formData = tools.formTake(e.currentTarget);\r\n//             try {\r\n//                 await Fetch('http://localhost:8000/user/register', {\r\n//                     method: 'post',\r\n//                     body: JSON.stringify(formData),\r\n//                     headers: new Headers({\r\n//                         'Content-Type': 'application/json',\r\n//                     }),\r\n//                 });\r\n//                 setRender(<ParsingElement />);\r\n//                 setJson(await res?.json());\r\n//                 setRender(<FullfilElement />);\r\n//             } catch (e) {\r\n//                 Catch(e);\r\n//                 setClick(true);\r\n//             }\r\n//         }\r\n//     }\r\n//     React.useEffect(() => {\r\n//         if (!res) {\r\n//             setClick(false);\r\n//         }\r\n//         return () => {};\r\n//     }, [res]);\r\n//     React.useEffect(() => {\r\n//         if (err) {\r\n//             setRender(<ErrorElement />);\r\n//         } else if (res?.status === 200) {\r\n//             setRender(<FullfilElement />);\r\n//         } else if (res?.status === 404) {\r\n//             setClick(true);\r\n//             setRender(<ErrorElement />);\r\n//         }\r\n//         return () => {};\r\n//     }, [err, res, Json, ErrorElement, FullfilElement]);\r\n//     return (\r\n//         <FormElement hooks={handleSubmit} State={Render} clickState={clicked} />\r\n//     );\r\n// };\r\n\r\nconst FindMyPasswordNext: React.FC<any> = () => (\r\n    // <Form\r\n    //     {...{\r\n    //         FormElement: NextForm,\r\n    //         InitialElement: () => <></>,\r\n    //         WarningElement: () => <>{'msg'}</>,\r\n    //         WaitingElement: () => <code>waiting</code>,\r\n    //         ParsingElement: () => <code>parsing</code>,\r\n    //         ErrorElement: () => <code>error</code>,\r\n    //         FullfilElement: () => (\r\n    //             <code>\r\n    //                 fullfil\r\n    //                 <Redirect to=\"/\" />\r\n    //             </code>\r\n    //         ),\r\n    //     }}\r\n    //     setSuccess={() => {}}\r\n    // />\r\n    <></>\r\n);\r\nexport default FindMyPasswordNext;\r\n","U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\index-page\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\find-password\\index.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\register\\index.tsx",["148","149","150","151","152","153"],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\Login\\login-form\\index.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\components-config\\Login\\index.ts",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\blog\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\blog\\upload-article\\index.tsx",["154","155","156","157","158","159"],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\pages\\index.tsx",[],"U:\\recover\\WorkSpace\\ysdn\\ysdn-app\\src\\tools\\form-take\\index.ts",[],"U:\\recover\\workspace\\ysdn\\ysdn-app\\src\\index.tsx",[],"U:\\recover\\workspace\\ysdn\\ysdn-app\\src\\pages\\find-my-password\\index.tsx",["160","161","162","163","164"],"U:\\recover\\workspace\\ysdn\\ysdn-app\\src\\components-config\\Login\\login-form\\index.ts",[],"U:\\recover\\workspace\\ysdn\\ysdn-app\\src\\pages\\login\\index.tsx",["165","166","167","168","169"],{"ruleId":"170","severity":1,"message":"171","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"174","line":6,"column":5,"nodeType":"172","messageId":"173","endLine":6,"endColumn":8},{"ruleId":"170","severity":1,"message":"175","line":7,"column":5,"nodeType":"172","messageId":"173","endLine":7,"endColumn":13},{"ruleId":"170","severity":1,"message":"176","line":8,"column":5,"nodeType":"172","messageId":"173","endLine":8,"endColumn":19},{"ruleId":"170","severity":1,"message":"177","line":9,"column":5,"nodeType":"172","messageId":"173","endLine":9,"endColumn":14},{"ruleId":"170","severity":1,"message":"178","line":10,"column":5,"nodeType":"172","messageId":"173","endLine":10,"endColumn":12},{"ruleId":"170","severity":1,"message":"179","line":11,"column":5,"nodeType":"172","messageId":"173","endLine":11,"endColumn":17},{"ruleId":"170","severity":1,"message":"180","line":13,"column":8,"nodeType":"172","messageId":"173","endLine":13,"endColumn":13},{"ruleId":"170","severity":1,"message":"181","line":17,"column":10,"nodeType":"172","messageId":"173","endLine":17,"endColumn":14},{"ruleId":"170","severity":1,"message":"182","line":136,"column":7,"nodeType":"172","messageId":"173","endLine":136,"endColumn":18},{"ruleId":"170","severity":1,"message":"183","line":137,"column":19,"nodeType":"172","messageId":"173","endLine":137,"endColumn":27},{"ruleId":"170","severity":1,"message":"184","line":152,"column":14,"nodeType":"172","messageId":"173","endLine":152,"endColumn":20},{"ruleId":"170","severity":1,"message":"185","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"186","line":3,"column":13,"nodeType":"172","messageId":"173","endLine":3,"endColumn":18},{"ruleId":"170","severity":1,"message":"187","line":5,"column":25,"nodeType":"172","messageId":"173","endLine":5,"endColumn":29},{"ruleId":"170","severity":1,"message":"188","line":5,"column":31,"nodeType":"172","messageId":"173","endLine":5,"endColumn":39},{"ruleId":"170","severity":1,"message":"189","line":10,"column":7,"nodeType":"172","messageId":"173","endLine":14,"endColumn":3},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"170","severity":1,"message":"194","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"195","line":2,"column":20,"nodeType":"172","messageId":"173","endLine":2,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"186","line":3,"column":13,"nodeType":"172","messageId":"173","endLine":3,"endColumn":18},{"ruleId":"170","severity":1,"message":"188","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":18},{"ruleId":"170","severity":1,"message":"196","line":9,"column":7,"nodeType":"172","messageId":"173","endLine":13,"endColumn":3},{"ruleId":"170","severity":1,"message":"171","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"187","line":11,"column":10,"nodeType":"172","messageId":"173","endLine":11,"endColumn":14},{"ruleId":"170","severity":1,"message":"182","line":110,"column":7,"nodeType":"172","messageId":"173","endLine":110,"endColumn":18},{"ruleId":"170","severity":1,"message":"183","line":111,"column":19,"nodeType":"172","messageId":"173","endLine":111,"endColumn":27},{"ruleId":"170","severity":1,"message":"197","line":120,"column":11,"nodeType":"172","messageId":"173","endLine":120,"endColumn":16},{"ruleId":"170","severity":1,"message":"184","line":126,"column":14,"nodeType":"172","messageId":"173","endLine":126,"endColumn":20},{"ruleId":"170","severity":1,"message":"198","line":4,"column":5,"nodeType":"172","messageId":"173","endLine":4,"endColumn":17},{"ruleId":"170","severity":1,"message":"199","line":5,"column":5,"nodeType":"172","messageId":"173","endLine":5,"endColumn":9},{"ruleId":"170","severity":1,"message":"200","line":7,"column":5,"nodeType":"172","messageId":"173","endLine":7,"endColumn":15},{"ruleId":"170","severity":1,"message":"177","line":9,"column":5,"nodeType":"172","messageId":"173","endLine":9,"endColumn":14},{"ruleId":"170","severity":1,"message":"201","line":10,"column":5,"nodeType":"172","messageId":"173","endLine":10,"endColumn":10},{"ruleId":"170","severity":1,"message":"202","line":12,"column":17,"nodeType":"172","messageId":"173","endLine":12,"endColumn":25},{"ruleId":"170","severity":1,"message":"171","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"186","line":3,"column":13,"nodeType":"172","messageId":"173","endLine":3,"endColumn":18},{"ruleId":"170","severity":1,"message":"187","line":5,"column":25,"nodeType":"172","messageId":"173","endLine":5,"endColumn":29},{"ruleId":"170","severity":1,"message":"188","line":5,"column":31,"nodeType":"172","messageId":"173","endLine":5,"endColumn":39},{"ruleId":"170","severity":1,"message":"189","line":10,"column":7,"nodeType":"172","messageId":"173","endLine":14,"endColumn":3},{"ruleId":"170","severity":1,"message":"181","line":17,"column":10,"nodeType":"172","messageId":"173","endLine":17,"endColumn":14},{"ruleId":"170","severity":1,"message":"182","line":136,"column":7,"nodeType":"172","messageId":"173","endLine":136,"endColumn":18},{"ruleId":"170","severity":1,"message":"183","line":137,"column":19,"nodeType":"172","messageId":"173","endLine":137,"endColumn":27},{"ruleId":"170","severity":1,"message":"184","line":152,"column":14,"nodeType":"172","messageId":"173","endLine":152,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":193,"column":8,"nodeType":"205","endLine":193,"endColumn":24,"suggestions":"206"},"@typescript-eslint/no-unused-vars","'utils' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'BoxProps' is defined but never used.","'TextFieldProps' is defined but never used.","'TextField' is defined but never used.","'Tooltip' is defined but never used.","'TooltipProps' is defined but never used.","'axios' is defined but never used.","'auth' is defined but never used.","'useHelpText' is assigned a value but never used.","'setState' is assigned a value but never used.","'SetRes' is defined but never used.","'account' is defined but never used.","'tools' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'FindMyPasswordForm' is assigned a value but never used.","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"'Mongoose' is defined but never used.","'useEffect' is defined but never used.","'NextForm' is assigned a value but never used.","'state' is assigned a value but never used.","'createStyles' is defined but never used.","'fade' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'msg'. Either include it or remove the dependency array. You can also do a functional update 'setMessage(m => ...)' if you only need 'msg' in the 'setMessage' call.","ArrayExpression",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},"Update the dependencies array to be: [msg, res, setState]",{"range":"212","text":"213"},[6731,6747],"[msg, res, setState]"]